//-----------------------------------------------------------------------------------------------
//
// 敵ボスの処理[enemy_boss.cpp]
// Author : SHUGO kURODA
//
//-----------------------------------------------------------------------------------------------

//-----------------------------------------------------------------------------------------------
// インクルードファイル
//-----------------------------------------------------------------------------------------------
#include "enemy_boss.h"
#include "manager.h"
#include "renderer.h"

#include "game.h"
#include "library.h"

#include "player.h"
#include "bullet.h"
#include "explosion.h"

//-----------------------------------------------------------------------------------------------
// 定数変数
//-----------------------------------------------------------------------------------------------
// 体力
const int CEnemyBoss::LIFE = 500;
// 幅
const float CEnemyBoss::SIZE_WIDTH = 100.0f;
// 高さ
const float CEnemyBoss::SIZE_HEIGHT = 90.0f;

//-----------------------------------------------------------------------------------------------
// コンストラクタ
//-----------------------------------------------------------------------------------------------
CEnemyBoss::CEnemyBoss() :m_move(0.0f, 0.0f, 0.0f)
{
}

//-----------------------------------------------------------------------------------------------
// デストラクタ
//-----------------------------------------------------------------------------------------------
CEnemyBoss::~CEnemyBoss()
{
}

//-----------------------------------------------------------------------------------------------
// 生成
//-----------------------------------------------------------------------------------------------
CEnemyBoss *CEnemyBoss::Create(const D3DXVECTOR3& pos, CEnemy::TYPE type)
{
	// ポインタクラスを宣言
	CEnemyBoss* pEnemy = new CEnemyBoss;

	if (pEnemy != nullptr)
	{
		//位置設定
		pEnemy->SetPosition(pos);

		//種類の設定
		pEnemy->SetType(type);

		// 初期化
		pEnemy->Init();

		// テクスチャの設定
		pEnemy->BindTexture(CEnemy::GetTexture(type));
	}

	return pEnemy;
}

//-----------------------------------------------------------------------------------------------
// 初期化
//-----------------------------------------------------------------------------------------------
HRESULT CEnemyBoss::Init()
{
	// 寿命の設定
	CEnemy::SetLife(LIFE);
	// サイズ設定
	CObject2D::SetSize(D3DXVECTOR2(SIZE_WIDTH, SIZE_HEIGHT));
	// オブジェクト情報の初期化
	CObject2D::Init();
	// 頂点カラーの設定
	CObject2D::SetColor(D3DXCOLOR(0.0f, 0.0f, 0.0f, 1.0f));

	return S_OK;
}

//-----------------------------------------------------------------------------------------------
// 終了
//-----------------------------------------------------------------------------------------------
void CEnemyBoss::Uninit()
{
	CEnemy::Uninit();
}

//-----------------------------------------------------------------------------------------------
// 更新
//-----------------------------------------------------------------------------------------------
void CEnemyBoss::Update()
{
	// 位置の取得
	D3DXVECTOR3 pos = CObject2D::GetPosition();

	// 移動量の更新
	pos += m_move;

	if (GetLife() <= 0)
	{// ライフが0
		// 爆発の生成
		CExplosion::Create(pos);
		// 破棄
		Uninit();
		return;
	}

	//アニメーション処理
	SetAnim();
	//状態管理
	State();
	// 位置の更新
	CObject2D::SetPosition(pos);
	//頂点座標の設定
	CObject2D::SetVertex();
}

//-----------------------------------------------------------------------------------------------
// 描画
//-----------------------------------------------------------------------------------------------
void CEnemyBoss::Draw()
{
	//描画処理
	CEnemy::Draw();
}

//-----------------------------------------------------------------------------------------------
// ダメージ処理
//-----------------------------------------------------------------------------------------------
void CEnemyBoss::Damage(int nDamage)
{
	CEnemy::Damage(nDamage);
}

//-----------------------------------------------------------------------------------------------
// 状態
//-----------------------------------------------------------------------------------------------
void CEnemyBoss::State()
{
	CEnemy::State();
}
